/*
389. Find the Difference

You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
*/

#include <string>
#include <algorithm>
using namespace std;

class Solution {
public:
    char findTheDifference(string s, string t) {
        char res = 0;
        for (const auto& c: s) res ^= c-'a';
        for (const auto& c: t) res ^= c-'a';

        return res+'a';
    }
};

class SolutionC {
public:
    char findTheDifference(string s, string t) {
        int S = 0;
        for (short c=0; c<s.length(); ++c) 
            S += t[c] - s[c];

        return S+t[t.length()-1];
    }
};

class SolutionB {
public:
    char findTheDifference(string s, string t) {
        
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        
        short c = 0;
        for (; c<s.length(); ++c) {
            if ( s[c]!=t[c] ) return t[c];
        }

        return t[c];
    }
};

class SolutionA {
public:
    char findTheDifference(string s, string t) {
        char N = 'z' - 'a' + 1;
        short* letters = (short*)(calloc(N, sizeof(short)));

        for (const char& c : s) { ++letters[c - 'a']; }
        for (const char& c : t) { --letters[c - 'a']; }
        char c = 0;
        for (; c<N; ++c) { if (letters[c]<0) break; }

        free(letters);
        return c+'a';
    }
};

int main() {

    SolutionC s;
    s.findTheDifference("abcd", "abcde");

    return 0;
}